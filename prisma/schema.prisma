// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions", "referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id        String   @id @default(uuid())
  uid       String   @unique @db.VarChar(100)
  isAdmin   Boolean  @default(false) @map("is_admin")
  username  String   @map("username") @db.VarChar(100)
  email     String   @unique @db.VarChar(191)
  avatarUrl String   @map("avatar_url") @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  customers   Customer[]
  casts       Cast[]
  sessions    Session[]
  order       Order[]
  purchase    Purchase[]
  liquorStore liquorStore[]
  plan        Plan[]
  item        Item[]
  category    Category[]
  sale        Sale[]
  saleOrder   SaleOrder[]
  staff       Staff[]
  salesGroup  SalesGroup[]
  @@map("user")
}

model Item {
  id        Int      @id @default(autoincrement())
  itemName  String   @map(name: "item_name") @db.VarChar(255)
  itemUrl   String   @map(name: "item_url")
  price     Int
  stock     Int
  cost      Int
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  order      Order[]
  user       User?    @relation(fields: [userId], references: [id])
  userId     String?

  @@unique([id, userId])
  @@map(name: "items")
}

model Category {
  id           Int      @id @default(autoincrement())
  categoryName String   @map(name: "category_name") @db.VarChar(255)
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @updatedAt @map(name: "updated_at")

  items  Item[]
  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@unique([id, userId])
  @@map(name: "categorys")
}

model Cast {
  id           Int       @id @default(autoincrement())
  castName     String    @map(name: "cast_name") @db.VarChar(255)
  castKana     String    @map(name: "cast_kana") @db.VarChar(255)
  castIcon     String    @map(name: "cast_icon") @db.VarChar(255)
  castUrl      String?   @map(name: "cast_url")
  lastWorkDate DateTime? @map("last_work_date")
  birthDay     DateTime? @map(name: "birth_day")
  createdAt    DateTime  @default(now()) @map(name: "created_at")
  updatedAt    DateTime  @updatedAt @map(name: "updated_at")

  customers Customer[]
  session   Session[]
  user      User?      @relation(fields: [userId], references: [id])
  userId    String?

  @@unique([id, userId])
  @@map(name: "casts")
}

model Staff {
  id        Int       @id @default(autoincrement())
  staffName String    @map(name: "staff_name") @db.VarChar(255)
  staffKana String    @map(name: "staff_kana") @db.VarChar(255)
  staffUrl  String?   @map(name: "staff_url")
  birthDay  DateTime? @map(name: "birth_day")
  isAdmin   Boolean   @default(false) @map("is_admin")
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@unique([id, userId])
  @@map(name: "staffs")
}

model Plan {
  id        Int      @id @default(autoincrement())
  planName  String   @map(name: "plan_name") @db.VarChar(255)
  price     Int
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  user    User?     @relation(fields: [userId], references: [id])
  userId  String?
  session Session[]
  @@unique([id, userId])
  @@map(name: "plans")
}

model Customer {
  id            Int       @id @default(autoincrement())
  customerKana  String    @map(name: "customer_kana") @db.VarChar(255)
  customerName  String    @map(name: "customer_name") @db.VarChar(255)
  birthDay      DateTime? @map(name: "birth_day")
  receipt       String?   @db.VarChar(255)
  lastVisitDate DateTime  @default(now()) @map("last_visit_date")
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  session Session[]
  cast    Cast?     @relation(fields: [castId], references: [id])
  castId  Int?
  user    User?     @relation(fields: [userId], references: [id])
  userId  String?

  @@unique([id, userId])
  @@map(name: "customers")
}

model Session {
  id            Int      @id @default(autoincrement())
  enteredAt     DateTime @default(now()) @map(name: "entered_at")
  exitedAt      DateTime @default(now()) @map(name: "exited_at")
  isChecked     Boolean  @default(false) @map(name: "is_checked")
  isCreditCard  Boolean  @default(false) @map(name: "is_credit_card")
  totalTime     Int      @default(0) @map(name: "total_time")
  extendedTime  Int      @default(0) @map(name: "extended_time")
  extendedPrice Int      @default(0) @map(name: "extended_price")
  subtotal      Int      @default(0) @map(name: "subtotal")
  servicePrice  Int      @default(0) @map(name: "service_price")
  taxPrice      Int      @default(0) @map(name: "tax_price")
  totalPrice    Int      @default(0) @map(name: "total_price")
  isDeleted     Boolean  @default(false) @map(name: "is_deleted")

  order      Order[]
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @map(name: "customer_id")
  cast       Cast     @relation(fields: [castId], references: [id])
  castId     Int      @map(name: "cast_id")
  plan       Plan     @relation(fields: [planId], references: [id])
  planId     Int      @map(name: "plan_id")
  user       User     @relation(fields: [userId], references: [id])
  userId     String

  @@unique([id, userId])
  @@map(name: "sessions")
}

model Order {
  id        Int      @id @default(autoincrement())
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int      @map(name: "item_id")
  count     Int
  total     Int
  session   Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  sessionId Int
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?

  @@unique([id, userId])
  @@map(name: "orders")
}

model liquorStore {
  id              Int      @id @default(autoincrement())
  liquorStoreName String   @map(name: "liquor_store_name")
  address         String?
  phone           String?
  staff           String?
  createdAt       DateTime @default(now()) @map(name: "created_at")
  updatedAt       DateTime @updatedAt @map(name: "updated_at")

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@unique([id, userId])
  @@map(name: "liquor_store")
}

model Purchase {
  id              Int      @id @default(autoincrement())
  itemName        String   @map(name: "item_name")
  liquorStoreName String   @map(name: "liquor_store_name")
  price           Int
  count           Int
  totalPrice      Int
  createdAt       DateTime @default(now()) @map(name: "created_at")
  updatedAt       DateTime @updatedAt @map(name: "updated_at")

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@unique([id, userId])
  @@map(name: "purchases")
}

model Sale {
  id            Int      @id @default(autoincrement())
  customerName  String   @map(name: "customer_name") @db.VarChar(255)
  customerKana  String   @map(name: "customer_kana") @db.VarChar(255)
  receipt       String?  @db.VarChar(255)
  castName      String   @map(name: "cast_name") @db.VarChar(255)
  planName      String   @map(name: "plan_name") @db.VarChar(255)
  planPrice     Int
  enteredAt     DateTime @map(name: "entered_at")
  exitedAt      DateTime @map(name: "exited_at")
  totalTime     Int      @map(name: "total_time")
  extendedTime  Int      @map(name: "extended_time")
  extendedPrice Int      @map(name: "extended_price")
  subtotal      Int      @map(name: "subtotal")
  servicePrice  Int      @map(name: "service_price")
  taxPrice      Int      @map(name: "tax_price")
  totalPrice    Int      @map(name: "total_price")
  isCreditCard  Boolean  @map(name: "is_credit_card")
  isDeleted     Boolean  @default(false) @map(name: "is_deleted")
  sessionId     Int      @map(name: "session_id")

  salesGroup   SalesGroup? @relation(fields: [salesGroupId], references: [id])
  salesGroupId Int?

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  saleOrder SaleOrder[]
  user      User?       @relation(fields: [userId], references: [id])
  userId    String?

  @@unique([id, userId])
  @@map(name: "sales")
}

model SaleOrder {
  id        Int    @id @default(autoincrement())
  itemName  String @map(name: "item_name")
  itemPrice Int    @map(name: "item_price")
  itemCount Int    @map(name: "item_count")

  sale   Sale? @relation(fields: [saleId], references: [id])
  saleId Int

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@unique([id, userId])
  @@map(name: "sale_orders")
}

model SalesGroup {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  sale      Sale[]
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?

  @@unique([id, userId])
  @@map(name: "sales_groups")
}

// 参考動画
// https://www.youtube.com/watch?v=mU8-nKwfw4Y&t=539s
