// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  uid       String   @unique @db.VarChar(100)
  isAdmin   Boolean  @default(false) @map("is_admin")
  username  String   @map("username") @db.VarChar(100)
  email     String   @unique @db.VarChar(191)
  avatarUrl String   @map("avatar_url") @db.VarChar(255)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  customers Customer[]
  casts     Cast[]
  sessions  Session[]
  Order     Order[]
  @@map("user")
}

model Item {
  id        Int      @id @default(autoincrement())
  itemName  String   @unique @map(name: "item_name") @db.VarChar(255)
  itemUrl   String   @map(name: "item_url")
  price     Int
  stock     Int
  cost      Int
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  Order      Order[]
  @@map(name: "items")
}

model Category {
  id           Int      @id @default(autoincrement())
  categoryName String   @unique @map(name: "category_name") @db.VarChar(255)
  categoryIcon String   @map(name: "category_icon") @db.VarChar(255)
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @updatedAt @map(name: "updated_at")

  items Item[]
  @@map(name: "categorys")
}

model Cast {
  id        Int      @id @default(autoincrement())
  castName  String   @unique @map(name: "cast_name") @db.VarChar(255)
  castKana  String   @unique @map(name: "cast_kana") @db.VarChar(255)
  castIcon  String   @map(name: "cast_icon") @db.VarChar(255)
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  customers Customer[]
  Session   Session[]
  User      User?      @relation(fields: [userId], references: [id])
  userId    String?
  @@map(name: "casts")
}

model Plan {
  id        Int      @id @default(autoincrement())
  planName  String   @unique @map(name: "plan_name") @db.VarChar(255)
  price     Int
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  Session Session[]
  @@map(name: "plans")
}

model Customer {
  id           Int       @id @default(autoincrement())
  customerKana String    @unique @map(name: "customer_kana") @db.VarChar(255)
  customerName String    @unique @map(name: "customer_name") @db.VarChar(255)
  birthDay     DateTime? @map(name: "birth_day")
  receipt      String?   @db.VarChar(255)
  createdAt    DateTime  @default(now()) @map(name: "created_at")
  updatedAt    DateTime  @updatedAt @map(name: "updated_at")

  Session Session[]
  cast    Cast      @relation(fields: [castId], references: [id])
  castId  Int
  User    User?     @relation(fields: [userId], references: [id])
  userId  String?
  @@map(name: "customers")
}

model Session {
  id        Int      @id @default(autoincrement())
  enteredAt DateTime @default(now()) @map(name: "entered_at")
  exitedAt  DateTime @default(now()) @map(name: "exited_at")

  Order      Order[]
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @map(name: "customer_id")
  cast       Cast     @relation(fields: [castId], references: [id])
  castId     Int      @map(name: "cast_id")
  plan       Plan     @relation(fields: [planId], references: [id])
  planId     Int      @map(name: "plan_id")
  User       User?    @relation(fields: [userId], references: [id])
  userId     String?
  @@map(name: "sessions")
}

model Order {
  id        Int      @id @default(autoincrement())
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int      @map(name: "item_id")
  count     Int
  total     Int
  Session   Session  @relation(fields: [sessionId], references: [id])
  sessionId Int
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?

  @@map(name: "orders")
}

// 参考動画
// https://www.youtube.com/watch?v=mU8-nKwfw4Y&t=539s
